name: Publish Image
run-name: Publish SocketDock ${{ inputs.tag || github.event.release.tag_name }} Image

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        type: string
      platforms:
        description: 'Platforms - Comma separated list of the platforms to support.'
        required: true
        default: linux/amd64
        type: string
      ref:
        description: 'Optional - The branch, tag or SHA to checkout.'
        required: false
        type: string

env:
  # TODO We can probobly support more platforms
  # PLATFORMS: ${{ inputs.platforms || 'linux/amd64,linux/arm64,linux/386' }}
  PLATFORMS: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}

jobs:
  publish-image:
    name: Publish Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || '' }}

      - name: Image info
        id: info
        run: |
          echo "repo-owner=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ steps.info.outputs.repo-owner }}/aries-socketdock
          tags: |
            type=raw,value=${{ inputs.tag || github.event.release.tag_name }}

      - name: Build and Push Image to ghcr.io
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ env.PLATFORMS }}
